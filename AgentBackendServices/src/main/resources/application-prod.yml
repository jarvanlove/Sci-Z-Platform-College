# 生产环境配置
spring:
  # 数据源配置
  datasource:
    url: jdbc:postgresql://prod-db-cluster:5432/sci_z_platform
    username: ${DB_USERNAME:prod_user}
    password: ${DB_PASSWORD:prod_password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 50
      minimum-idle: 20
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000

  # Redis 配置
  data:
    redis:
      host: ${REDIS_HOST:prod-redis-cluster}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:prod_redis_password}
      database: 0
      timeout: 5000ms
      lettuce:
        pool:
          max-active: 32
          max-wait: -1ms
          max-idle: 32
          min-idle: 8
        cluster:
          refresh:
            adaptive: true
            period: 30s

  # RabbitMQ 配置
  rabbitmq:
    host: ${RABBITMQ_HOST:prod-rabbitmq-cluster}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:prod_user}
    password: ${RABBITMQ_PASSWORD:prod_password}
    virtual-host: ${RABBITMQ_VHOST:/prod}
    connection-timeout: 30000
    listener:
      simple:
        acknowledge-mode: manual
        retry:
          enabled: true
          max-attempts: 5
          initial-interval: 5000
          max-interval: 30000
          multiplier: 2.0
        concurrency: 10
        max-concurrency: 20

# MyBatis 配置
mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.server.agentbackendservices.entity
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl
    cache-enabled: true
    lazy-loading-enabled: true
    aggressive-lazy-loading: false

# 日志配置
logging:
  level:
    root: WARN
    com.server.agentbackendservices: INFO
    org.springframework.web: WARN
    org.mybatis: WARN
  file:
    name: /var/log/agent-backend/application.log
  logback:
    rollingpolicy:
      max-file-size: 100MB
      max-history: 30
      total-size-cap: 10GB

# 服务器配置
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api
  tomcat:
    max-threads: 200
    min-spare-threads: 20
    max-connections: 10000
    accept-count: 100
    connection-timeout: 20000

# 监控配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

# 安全配置
security:
  jwt:
    secret: ${JWT_SECRET:your-secret-key-here}
    expiration: 86400000  # 24小时
  cors:
    allowed-origins: ${CORS_ORIGINS:https://yourdomain.com}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true

# 缓存配置
cache:
  redis:
    default-ttl: 3600  # 1小时
    key-prefix: "sci-z:"
  local:
    max-size: 1000
    ttl: 300  # 5分钟
