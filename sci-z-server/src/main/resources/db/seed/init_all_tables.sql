-- ******************************************************
-- Sci-Z Platform - All Tables Initialization (PostgreSQL)
-- Purpose: One-shot executable schema script (idempotent)
-- Notes:
--  - Uses CREATE TABLE IF NOT EXISTS for safe re-run
--  - Types normalized for PostgreSQL (e.g., SMALLINT over TINYINT)
--  - Comments and indexes included for readability and performance
--  - No explicit foreign key constraints to keep execution ordering simple
-- ******************************************************

BEGIN;

-- ===================== IAM DOMAIN (10 tables) =====================

CREATE TABLE IF NOT EXISTS sys_industry_config (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    industry_type VARCHAR(50) NOT NULL,
    industry_name VARCHAR(100) NOT NULL,
    department_label VARCHAR(50) NOT NULL,
    role_label VARCHAR(50) NOT NULL,
    employee_id_label VARCHAR(50) NOT NULL,
    is_active SMALLINT DEFAULT 1,
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    updated_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE sys_industry_config IS '行业配置表';
COMMENT ON COLUMN sys_industry_config.id IS '配置ID，主键，自增';
COMMENT ON COLUMN sys_industry_config.industry_type IS '行业类型(education/medical/power)';
COMMENT ON COLUMN sys_industry_config.industry_name IS '行业名称';
COMMENT ON COLUMN sys_industry_config.department_label IS '部门标签(院系/科室/部门)';
COMMENT ON COLUMN sys_industry_config.role_label IS '角色标签(角色/职务/岗位)';
COMMENT ON COLUMN sys_industry_config.employee_id_label IS '员工ID标签(学工号/工号/员工号)';
COMMENT ON COLUMN sys_industry_config.is_active IS '是否启用(0:禁用,1:启用)';
COMMENT ON COLUMN sys_industry_config.is_deleted IS '逻辑删除标识：0=未删除，1=已删除';
COMMENT ON COLUMN sys_industry_config.created_by IS '创建人ID';
COMMENT ON COLUMN sys_industry_config.updated_by IS '更新人ID';
COMMENT ON COLUMN sys_industry_config.created_time IS '创建时间';
COMMENT ON COLUMN sys_industry_config.updated_time IS '更新时间';
CREATE UNIQUE INDEX IF NOT EXISTS uk_sys_industry_type ON sys_industry_config(industry_type);

CREATE TABLE IF NOT EXISTS sys_department (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    parent_id BIGINT DEFAULT 0,
    department_name VARCHAR(100) NOT NULL,
    department_code VARCHAR(50) NOT NULL,
    industry_type VARCHAR(50) NOT NULL,
    level INT NOT NULL,
    sort_order INT DEFAULT 0,
    status SMALLINT DEFAULT 1,
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    updated_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE sys_department IS '部门表';
COMMENT ON COLUMN sys_department.id IS '部门ID，主键，自增';
COMMENT ON COLUMN sys_department.parent_id IS '父部门ID(0为顶级)';
COMMENT ON COLUMN sys_department.department_name IS '部门名称';
COMMENT ON COLUMN sys_department.department_code IS '部门编码';
COMMENT ON COLUMN sys_department.industry_type IS '行业类型';
COMMENT ON COLUMN sys_department.level IS '部门层级';
COMMENT ON COLUMN sys_department.sort_order IS '排序号';
COMMENT ON COLUMN sys_department.status IS '状态(0:禁用,1:启用)';
COMMENT ON COLUMN sys_department.is_deleted IS '逻辑删除标识：0=未删除，1=已删除';
COMMENT ON COLUMN sys_department.created_by IS '创建人ID';
COMMENT ON COLUMN sys_department.updated_by IS '更新人ID';
COMMENT ON COLUMN sys_department.created_time IS '创建时间';
COMMENT ON COLUMN sys_department.updated_time IS '更新时间';
CREATE INDEX IF NOT EXISTS idx_sys_department_parent_id ON sys_department(parent_id);
CREATE INDEX IF NOT EXISTS idx_sys_department_industry_type ON sys_department(industry_type);
CREATE INDEX IF NOT EXISTS idx_sys_department_is_deleted ON sys_department(is_deleted);

CREATE TABLE IF NOT EXISTS sys_user (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(255) NOT NULL,
    real_name VARCHAR(50) NOT NULL,
    email VARCHAR(100),
    phone VARCHAR(20),
    avatar_url VARCHAR(500),
    employee_id VARCHAR(50),
    department_id BIGINT,
    industry_type VARCHAR(50) NOT NULL,
    status SMALLINT DEFAULT 1,
    login_count INT DEFAULT 0,
    last_login_time TIMESTAMP,
    last_login_ip VARCHAR(50),
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by BIGINT,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE sys_user IS '系统用户表';
COMMENT ON COLUMN sys_user.id IS '用户ID，主键，自增';
COMMENT ON COLUMN sys_user.username IS '用户名，唯一标识，用于登录';
COMMENT ON COLUMN sys_user.password IS '密码，加密存储';
COMMENT ON COLUMN sys_user.real_name IS '真实姓名';
COMMENT ON COLUMN sys_user.email IS '邮箱地址';
COMMENT ON COLUMN sys_user.phone IS '手机号码';
COMMENT ON COLUMN sys_user.avatar_url IS '头像URL';
COMMENT ON COLUMN sys_user.employee_id IS '员工ID（学工号/工号/员工号）';
COMMENT ON COLUMN sys_user.department_id IS '所属部门ID';
COMMENT ON COLUMN sys_user.industry_type IS '行业类型';
COMMENT ON COLUMN sys_user.status IS '用户状态：1=正常，0=禁用';
COMMENT ON COLUMN sys_user.login_count IS '登录次数';
COMMENT ON COLUMN sys_user.last_login_time IS '最后登录时间';
COMMENT ON COLUMN sys_user.last_login_ip IS '最后登录IP';
COMMENT ON COLUMN sys_user.is_deleted IS '逻辑删除标识：0=未删除，1=已删除';
COMMENT ON COLUMN sys_user.created_by IS '创建人ID';
COMMENT ON COLUMN sys_user.created_time IS '创建时间';
COMMENT ON COLUMN sys_user.updated_by IS '更新人ID';
COMMENT ON COLUMN sys_user.updated_time IS '更新时间';
CREATE UNIQUE INDEX IF NOT EXISTS uk_sys_user_username ON sys_user(username) WHERE is_deleted = 0;
CREATE UNIQUE INDEX IF NOT EXISTS uk_sys_user_employee_industry ON sys_user(employee_id, industry_type) WHERE is_deleted = 0;
CREATE INDEX IF NOT EXISTS idx_sys_user_email ON sys_user(email);
CREATE INDEX IF NOT EXISTS idx_sys_user_phone ON sys_user(phone);
CREATE INDEX IF NOT EXISTS idx_sys_user_department_id ON sys_user(department_id);
CREATE INDEX IF NOT EXISTS idx_sys_user_industry_type ON sys_user(industry_type);
CREATE INDEX IF NOT EXISTS idx_sys_user_status ON sys_user(status);
CREATE INDEX IF NOT EXISTS idx_sys_user_is_deleted ON sys_user(is_deleted);
CREATE INDEX IF NOT EXISTS idx_sys_user_created_time ON sys_user(created_time);

CREATE TABLE IF NOT EXISTS sys_user_profile (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT NOT NULL,
    attribute_name VARCHAR(50) NOT NULL,
    attribute_value VARCHAR(255),
    attribute_type VARCHAR(20) NOT NULL,
    is_required SMALLINT DEFAULT 0,
    sort_order INT DEFAULT 0,
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    updated_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE sys_user_profile IS '用户扩展属性表';
COMMENT ON COLUMN sys_user_profile.id IS '属性ID，主键，自增';
COMMENT ON COLUMN sys_user_profile.user_id IS '用户ID';
COMMENT ON COLUMN sys_user_profile.attribute_name IS '属性名称';
COMMENT ON COLUMN sys_user_profile.attribute_value IS '属性值';
COMMENT ON COLUMN sys_user_profile.attribute_type IS '属性类型(text/select/number/date)';
COMMENT ON COLUMN sys_user_profile.is_required IS '是否必填(0:否,1:是)';
COMMENT ON COLUMN sys_user_profile.sort_order IS '排序号';
COMMENT ON COLUMN sys_user_profile.created_time IS '创建时间';
COMMENT ON COLUMN sys_user_profile.updated_time IS '更新时间';
CREATE UNIQUE INDEX IF NOT EXISTS uk_sys_user_profile_user_attribute ON sys_user_profile(user_id, attribute_name);
CREATE INDEX IF NOT EXISTS idx_sys_user_profile_user_id ON sys_user_profile(user_id);

CREATE TABLE IF NOT EXISTS sys_role (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    role_name VARCHAR(50) NOT NULL,
    role_code VARCHAR(50) NOT NULL,
    description VARCHAR(255),
    industry_type VARCHAR(50) NOT NULL,
    role_type VARCHAR(20) DEFAULT 'custom',
    sort_order INT DEFAULT 0,
    status SMALLINT DEFAULT 1,
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by BIGINT,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE sys_role IS '系统角色表';
COMMENT ON COLUMN sys_role.id IS '角色ID，主键，自增';
COMMENT ON COLUMN sys_role.role_name IS '角色名称，唯一标识';
COMMENT ON COLUMN sys_role.role_code IS '角色编码，唯一标识';
COMMENT ON COLUMN sys_role.description IS '角色描述';
COMMENT ON COLUMN sys_role.industry_type IS '行业类型';
COMMENT ON COLUMN sys_role.role_type IS '角色类型(system/custom)';
COMMENT ON COLUMN sys_role.sort_order IS '排序';
COMMENT ON COLUMN sys_role.status IS '角色状态：1=启用，0=禁用';
COMMENT ON COLUMN sys_role.is_deleted IS '逻辑删除标识：0=未删除，1=已删除';
COMMENT ON COLUMN sys_role.created_by IS '创建人ID';
COMMENT ON COLUMN sys_role.created_time IS '创建时间';
COMMENT ON COLUMN sys_role.updated_by IS '更新人ID';
COMMENT ON COLUMN sys_role.updated_time IS '更新时间';
CREATE UNIQUE INDEX IF NOT EXISTS uk_sys_role_code_industry ON sys_role(role_code, industry_type) WHERE is_deleted = 0;
CREATE INDEX IF NOT EXISTS idx_sys_role_industry_type ON sys_role(industry_type);
CREATE INDEX IF NOT EXISTS idx_sys_role_status ON sys_role(status);
CREATE INDEX IF NOT EXISTS idx_sys_role_is_deleted ON sys_role(is_deleted);
CREATE INDEX IF NOT EXISTS idx_sys_role_sort_order ON sys_role(sort_order);

CREATE TABLE IF NOT EXISTS sys_permission (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    parent_id BIGINT DEFAULT 0,
    permission_name VARCHAR(50) NOT NULL,
    permission_code VARCHAR(100) NOT NULL,
    permission_type SMALLINT NOT NULL,
    industry_type VARCHAR(50) NOT NULL,
    path VARCHAR(200),
    component VARCHAR(200),
    icon VARCHAR(100),
    sort_order INT DEFAULT 0,
    status SMALLINT DEFAULT 1,
    is_deleted SMALLINT DEFAULT 0,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by BIGINT,
    updated_by BIGINT,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE sys_permission IS '系统权限表';
COMMENT ON COLUMN sys_permission.id IS '权限ID，主键，自增';
COMMENT ON COLUMN sys_permission.parent_id IS '父权限ID，0表示顶级权限';
COMMENT ON COLUMN sys_permission.permission_name IS '权限名称';
COMMENT ON COLUMN sys_permission.permission_code IS '权限编码，唯一标识';
COMMENT ON COLUMN sys_permission.permission_type IS '权限类型：1=菜单，2=按钮，3=API';
COMMENT ON COLUMN sys_permission.industry_type IS '行业类型';
COMMENT ON COLUMN sys_permission.path IS '路由路径';
COMMENT ON COLUMN sys_permission.component IS '组件路径';
COMMENT ON COLUMN sys_permission.icon IS '图标';
COMMENT ON COLUMN sys_permission.sort_order IS '排序';
COMMENT ON COLUMN sys_permission.status IS '权限状态：1=启用，0=禁用';
COMMENT ON COLUMN sys_permission.is_deleted IS '逻辑删除标识：0=未删除，1=已删除';
COMMENT ON COLUMN sys_permission.created_time IS '创建时间';
COMMENT ON COLUMN sys_permission.updated_time IS '更新时间';
COMMENT ON COLUMN sys_permission.created_by IS '创建人ID';
COMMENT ON COLUMN sys_permission.updated_by IS '更新人ID';
CREATE UNIQUE INDEX IF NOT EXISTS uk_sys_permission_code_industry ON sys_permission(permission_code, industry_type) WHERE is_deleted = 0;
CREATE INDEX IF NOT EXISTS idx_sys_permission_parent_id ON sys_permission(parent_id);
CREATE INDEX IF NOT EXISTS idx_sys_permission_industry_type ON sys_permission(industry_type);
CREATE INDEX IF NOT EXISTS idx_sys_permission_type ON sys_permission(permission_type);
CREATE INDEX IF NOT EXISTS idx_sys_permission_status ON sys_permission(status);
CREATE INDEX IF NOT EXISTS idx_sys_permission_is_deleted ON sys_permission(is_deleted);
CREATE INDEX IF NOT EXISTS idx_sys_permission_sort_order ON sys_permission(sort_order);

CREATE TABLE IF NOT EXISTS sys_user_role (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT NOT NULL,
    role_id BIGINT NOT NULL,
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    updated_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE sys_user_role IS '用户角色关联表';
COMMENT ON COLUMN sys_user_role.id IS '关联ID，主键，自增';
COMMENT ON COLUMN sys_user_role.user_id IS '用户ID，关联sys_user表';
COMMENT ON COLUMN sys_user_role.role_id IS '角色ID，关联sys_role表';
COMMENT ON COLUMN sys_user_role.is_deleted IS '逻辑删除标识：0=未删除，1=已删除';
COMMENT ON COLUMN sys_user_role.created_time IS '创建时间';
CREATE UNIQUE INDEX IF NOT EXISTS uk_sys_user_role ON sys_user_role(user_id, role_id) WHERE is_deleted = 0;
CREATE INDEX IF NOT EXISTS idx_sys_user_role_user_id ON sys_user_role(user_id);
CREATE INDEX IF NOT EXISTS idx_sys_user_role_role_id ON sys_user_role(role_id);
CREATE INDEX IF NOT EXISTS idx_sys_user_role_is_deleted ON sys_user_role(is_deleted);

CREATE TABLE IF NOT EXISTS sys_role_permission (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    role_id BIGINT NOT NULL,
    permission_id BIGINT NOT NULL,
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    updated_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE sys_role_permission IS '角色权限关联表';
COMMENT ON COLUMN sys_role_permission.id IS '关联ID，主键，自增';
COMMENT ON COLUMN sys_role_permission.role_id IS '角色ID，关联sys_role表';
COMMENT ON COLUMN sys_role_permission.permission_id IS '权限ID，关联sys_permission表';
COMMENT ON COLUMN sys_role_permission.is_deleted IS '逻辑删除标识：0=未删除，1=已删除';
COMMENT ON COLUMN sys_role_permission.created_time IS '创建时间';
CREATE UNIQUE INDEX IF NOT EXISTS uk_sys_role_permission ON sys_role_permission(role_id, permission_id) WHERE is_deleted = 0;
CREATE INDEX IF NOT EXISTS idx_sys_role_permission_role_id ON sys_role_permission(role_id);
CREATE INDEX IF NOT EXISTS idx_sys_role_permission_permission_id ON sys_role_permission(permission_id);
CREATE INDEX IF NOT EXISTS idx_sys_role_permission_is_deleted ON sys_role_permission(is_deleted);

CREATE TABLE IF NOT EXISTS sys_login_log (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT,
    username VARCHAR(50),
    login_ip VARCHAR(50),
    login_location VARCHAR(100),
    browser VARCHAR(50),
    os VARCHAR(50),
    status SMALLINT,
    message VARCHAR(255),
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    updated_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    login_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE sys_login_log IS '用户登录日志表';
COMMENT ON COLUMN sys_login_log.id IS '日志ID，主键，自增';
COMMENT ON COLUMN sys_login_log.user_id IS '用户ID，关联sys_user表';
COMMENT ON COLUMN sys_login_log.username IS '用户名';
COMMENT ON COLUMN sys_login_log.login_ip IS '登录IP地址';
COMMENT ON COLUMN sys_login_log.login_location IS '登录地点';
COMMENT ON COLUMN sys_login_log.browser IS '浏览器信息';
COMMENT ON COLUMN sys_login_log.os IS '操作系统信息';
COMMENT ON COLUMN sys_login_log.status IS '登录状态：1=成功，0=失败';
COMMENT ON COLUMN sys_login_log.message IS '提示消息';
COMMENT ON COLUMN sys_login_log.is_deleted IS '逻辑删除标识：0=未删除，1=已删除';
COMMENT ON COLUMN sys_login_log.login_time IS '登录时间';
CREATE INDEX IF NOT EXISTS idx_sys_login_log_user_id ON sys_login_log(user_id);
CREATE INDEX IF NOT EXISTS idx_sys_login_log_username ON sys_login_log(username);
CREATE INDEX IF NOT EXISTS idx_sys_login_log_login_ip ON sys_login_log(login_ip);
CREATE INDEX IF NOT EXISTS idx_sys_login_log_status ON sys_login_log(status);
CREATE INDEX IF NOT EXISTS idx_sys_login_log_login_time ON sys_login_log(login_time);
CREATE INDEX IF NOT EXISTS idx_sys_login_log_is_deleted ON sys_login_log(is_deleted);

CREATE TABLE IF NOT EXISTS sys_operation_log (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT,
    username VARCHAR(50),
    operation VARCHAR(100) NOT NULL,
    method VARCHAR(20) NOT NULL,
    request_url VARCHAR(500) NOT NULL,
    request_params TEXT,
    response_result TEXT,
    ip_address VARCHAR(50) NOT NULL,
    location VARCHAR(100),
    browser VARCHAR(100),
    os VARCHAR(100),
    status SMALLINT NOT NULL,
    error_message TEXT,
    execution_time INT NOT NULL,
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    updated_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE sys_operation_log IS '系统操作日志表';
COMMENT ON COLUMN sys_operation_log.id IS '日志ID，主键，自增';
COMMENT ON COLUMN sys_operation_log.user_id IS '用户ID';
COMMENT ON COLUMN sys_operation_log.username IS '用户名';
COMMENT ON COLUMN sys_operation_log.operation IS '操作类型';
COMMENT ON COLUMN sys_operation_log.method IS '请求方法（GET/POST等）';
COMMENT ON COLUMN sys_operation_log.request_url IS '请求URL';
COMMENT ON COLUMN sys_operation_log.request_params IS '请求参数';
COMMENT ON COLUMN sys_operation_log.response_result IS '响应结果';
COMMENT ON COLUMN sys_operation_log.ip_address IS 'IP地址';
COMMENT ON COLUMN sys_operation_log.location IS '操作地点';
COMMENT ON COLUMN sys_operation_log.browser IS '浏览器';
COMMENT ON COLUMN sys_operation_log.os IS '操作系统';
COMMENT ON COLUMN sys_operation_log.status IS '操作状态（0:失败,1:成功）';
COMMENT ON COLUMN sys_operation_log.error_message IS '错误信息';
COMMENT ON COLUMN sys_operation_log.execution_time IS '执行时长（毫秒）';
COMMENT ON COLUMN sys_operation_log.created_time IS '创建时间';
CREATE INDEX IF NOT EXISTS idx_sys_operation_log_user_id ON sys_operation_log(user_id);
CREATE INDEX IF NOT EXISTS idx_sys_operation_log_created_time ON sys_operation_log(created_time);
CREATE INDEX IF NOT EXISTS idx_sys_operation_log_status ON sys_operation_log(status);

-- ===================== DECLARATION DOMAIN (2 tables) =====================

CREATE TABLE IF NOT EXISTS declaration (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    number VARCHAR(50) NOT NULL,
    applicant_id BIGINT NOT NULL,
    applicant_name VARCHAR(50) NOT NULL,
    department VARCHAR(100) NOT NULL,
    project_leader VARCHAR(50) NOT NULL,
    document_publish_time DATE,
    project_start_time DATE,
    project_end_time DATE,
    research_direction TEXT NOT NULL,
    research_fields JSONB,
    research_topic VARCHAR(500),
    content_summary TEXT,
    workflow_id VARCHAR(50),
    workflow_status VARCHAR(20) DEFAULT 'pending',
    workflow_result JSONB,
    status VARCHAR(20) DEFAULT 'pending',
    submit_time TIMESTAMP,
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    updated_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE declaration IS '申报表';
COMMENT ON COLUMN declaration.id IS '申报ID，主键，自增';
COMMENT ON COLUMN declaration.number IS '申报编号';
COMMENT ON COLUMN declaration.applicant_id IS '申报人ID';
COMMENT ON COLUMN declaration.applicant_name IS '申报人姓名';
COMMENT ON COLUMN declaration.department IS '课题发布部门';
COMMENT ON COLUMN declaration.project_leader IS '项目负责人';
COMMENT ON COLUMN declaration.document_publish_time IS '红头文件发布时间';
COMMENT ON COLUMN declaration.project_start_time IS '项目开始时间';
COMMENT ON COLUMN declaration.project_end_time IS '项目结束时间';
COMMENT ON COLUMN declaration.research_direction IS '研究方向(富文本)';
COMMENT ON COLUMN declaration.research_fields IS '研究领域(JSON数组)';
COMMENT ON COLUMN declaration.research_topic IS '研究课题';
COMMENT ON COLUMN declaration.content_summary IS '研究内容摘要';
COMMENT ON COLUMN declaration.workflow_id IS '工作流ID';
COMMENT ON COLUMN declaration.workflow_status IS '工作流状态';
COMMENT ON COLUMN declaration.workflow_result IS '工作流结果(JSON)';
COMMENT ON COLUMN declaration.status IS '申报状态';
COMMENT ON COLUMN declaration.submit_time IS '提交时间';
COMMENT ON COLUMN declaration.is_deleted IS '删除标记';
COMMENT ON COLUMN declaration.created_time IS '创建时间';
COMMENT ON COLUMN declaration.updated_time IS '更新时间';
CREATE UNIQUE INDEX IF NOT EXISTS uk_declaration_number ON declaration(number) WHERE is_deleted = 0;
CREATE INDEX IF NOT EXISTS idx_declaration_applicant_id ON declaration(applicant_id);
CREATE INDEX IF NOT EXISTS idx_declaration_status ON declaration(status);
CREATE INDEX IF NOT EXISTS idx_declaration_submit_time ON declaration(submit_time);
CREATE INDEX IF NOT EXISTS idx_declaration_is_deleted ON declaration(is_deleted);

CREATE TABLE IF NOT EXISTS sys_workflow_template (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    dify_workflow_id VARCHAR(100),
    category VARCHAR(50) NOT NULL,
    is_active SMALLINT DEFAULT 1,
    sort_order INT DEFAULT 0,
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    updated_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE sys_workflow_template IS '工作流模板表';
COMMENT ON COLUMN sys_workflow_template.id IS '模板ID，主键，自增';
COMMENT ON COLUMN sys_workflow_template.name IS '工作流名称';
COMMENT ON COLUMN sys_workflow_template.description IS '工作流描述';
COMMENT ON COLUMN sys_workflow_template.dify_workflow_id IS 'Dify工作流ID';
COMMENT ON COLUMN sys_workflow_template.category IS '工作流分类';
COMMENT ON COLUMN sys_workflow_template.is_active IS '是否启用';
COMMENT ON COLUMN sys_workflow_template.sort_order IS '排序号';
COMMENT ON COLUMN sys_workflow_template.is_deleted IS '删除标记';
COMMENT ON COLUMN sys_workflow_template.created_time IS '创建时间';
COMMENT ON COLUMN sys_workflow_template.updated_time IS '更新时间';
CREATE INDEX IF NOT EXISTS idx_sys_workflow_template_category ON sys_workflow_template(category);
CREATE INDEX IF NOT EXISTS idx_sys_workflow_template_is_active ON sys_workflow_template(is_active);
CREATE INDEX IF NOT EXISTS idx_sys_workflow_template_is_deleted ON sys_workflow_template(is_deleted);

-- ===================== PROJECT DOMAIN (3 tables) =====================

CREATE TABLE IF NOT EXISTS project (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    number VARCHAR(50) NOT NULL,
    name VARCHAR(200) NOT NULL,
    description TEXT,
    declaration_id BIGINT NOT NULL,
    budget DECIMAL(15,2) DEFAULT 0.00,
    progress SMALLINT DEFAULT 0,
    status VARCHAR(20) DEFAULT 'pending',
    dify_knowledge_id VARCHAR(100),
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    updated_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE project IS '项目表';
COMMENT ON COLUMN project.id IS '项目ID，主键，自增';
COMMENT ON COLUMN project.number IS '项目编号';
COMMENT ON COLUMN project.name IS '项目名称';
COMMENT ON COLUMN project.description IS '项目描述';
COMMENT ON COLUMN project.declaration_id IS '关联申报ID';
COMMENT ON COLUMN project.budget IS '项目预算';
COMMENT ON COLUMN project.progress IS '进度百分比';
COMMENT ON COLUMN project.status IS '项目状态';
COMMENT ON COLUMN project.dify_knowledge_id IS 'Dify知识库ID';
COMMENT ON COLUMN project.is_deleted IS '删除标记';
COMMENT ON COLUMN project.created_time IS '创建时间';
COMMENT ON COLUMN project.updated_time IS '更新时间';
CREATE UNIQUE INDEX IF NOT EXISTS uk_project_number ON project(number) WHERE is_deleted = 0;
CREATE INDEX IF NOT EXISTS idx_project_status ON project(status);
CREATE INDEX IF NOT EXISTS idx_project_declaration_id ON project(declaration_id);
CREATE INDEX IF NOT EXISTS idx_project_is_deleted ON project(is_deleted);

CREATE TABLE IF NOT EXISTS project_member (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    project_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    user_name VARCHAR(50) NOT NULL,
    role VARCHAR(20) NOT NULL,
    join_time TIMESTAMP NOT NULL,
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    updated_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE project_member IS '项目成员表';
COMMENT ON COLUMN project_member.id IS '成员ID，主键，自增';
COMMENT ON COLUMN project_member.project_id IS '项目ID';
COMMENT ON COLUMN project_member.user_id IS '用户ID';
COMMENT ON COLUMN project_member.user_name IS '用户姓名';
COMMENT ON COLUMN project_member.role IS '角色';
COMMENT ON COLUMN project_member.join_time IS '加入时间';
COMMENT ON COLUMN project_member.is_deleted IS '删除标记';
COMMENT ON COLUMN project_member.created_time IS '创建时间';
CREATE UNIQUE INDEX IF NOT EXISTS uk_project_member_project_user ON project_member(project_id, user_id) WHERE is_deleted = 0;
CREATE INDEX IF NOT EXISTS idx_project_member_user_id ON project_member(user_id);
CREATE INDEX IF NOT EXISTS idx_project_member_is_deleted ON project_member(is_deleted);

CREATE TABLE IF NOT EXISTS project_progress (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    project_id BIGINT NOT NULL,
    title VARCHAR(200) NOT NULL,
    content TEXT,
    progress SMALLINT NOT NULL,
    is_milestone SMALLINT DEFAULT 0,
    milestone_start_time DATE,
    milestone_end_time DATE,
    recorder_id BIGINT NOT NULL,
    recorder_name VARCHAR(50) NOT NULL,
    record_time TIMESTAMP NOT NULL,
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    updated_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE project_progress IS '项目进度表';
COMMENT ON COLUMN project_progress.id IS '进度ID，主键，自增';
COMMENT ON COLUMN project_progress.project_id IS '项目ID';
COMMENT ON COLUMN project_progress.title IS '进度标题';
COMMENT ON COLUMN project_progress.content IS '进度内容';
COMMENT ON COLUMN project_progress.progress IS '进度百分比';
COMMENT ON COLUMN project_progress.is_milestone IS '是否里程碑';
COMMENT ON COLUMN project_progress.milestone_start_time IS '里程碑开始时间';
COMMENT ON COLUMN project_progress.milestone_end_time IS '里程碑结束时间';
COMMENT ON COLUMN project_progress.recorder_id IS '记录人ID';
COMMENT ON COLUMN project_progress.recorder_name IS '记录人姓名';
COMMENT ON COLUMN project_progress.record_time IS '记录时间';
COMMENT ON COLUMN project_progress.is_deleted IS '删除标记';
COMMENT ON COLUMN project_progress.created_time IS '创建时间';
CREATE INDEX IF NOT EXISTS idx_project_progress_project_id ON project_progress(project_id);
CREATE INDEX IF NOT EXISTS idx_project_progress_is_milestone ON project_progress(is_milestone);
CREATE INDEX IF NOT EXISTS idx_project_progress_is_deleted ON project_progress(is_deleted);

-- ===================== REPORT DOMAIN (3 tables) =====================

CREATE TABLE IF NOT EXISTS report_management (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    number VARCHAR(50) NOT NULL,
    project_id BIGINT NOT NULL,
    project_name VARCHAR(200) NOT NULL,
    project_code VARCHAR(50),
    project_knowledge_id VARCHAR(100),
    report_type VARCHAR(20) NOT NULL,
    creator_id BIGINT NOT NULL,
    creator_name VARCHAR(50) NOT NULL,
    summary TEXT,
    status VARCHAR(20) DEFAULT 'pending',
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    updated_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    generate_time TIMESTAMP,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE report_management IS '报告管理表';
COMMENT ON COLUMN report_management.id IS '报告ID，主键，自增';
COMMENT ON COLUMN report_management.number IS '报告编号，唯一标识';
COMMENT ON COLUMN report_management.project_id IS '项目ID';
COMMENT ON COLUMN report_management.project_name IS '项目名称';
COMMENT ON COLUMN report_management.project_code IS '项目编号';
COMMENT ON COLUMN report_management.project_knowledge_id IS '项目知识库ID';
COMMENT ON COLUMN report_management.report_type IS '报告类型(tech=科技报告/self=自评报告)';
COMMENT ON COLUMN report_management.creator_id IS '创建人ID';
COMMENT ON COLUMN report_management.creator_name IS '创建人姓名';
COMMENT ON COLUMN report_management.summary IS '报告摘要';
COMMENT ON COLUMN report_management.status IS '状态(pending/generating/completed/failed)';
COMMENT ON COLUMN report_management.is_deleted IS '逻辑删除标识：0=未删除，1=已删除';
COMMENT ON COLUMN report_management.created_by IS '创建人ID';
COMMENT ON COLUMN report_management.updated_by IS '更新人ID';
COMMENT ON COLUMN report_management.created_time IS '创建时间';
COMMENT ON COLUMN report_management.generate_time IS '生成完成时间';
COMMENT ON COLUMN report_management.updated_time IS '更新时间';
CREATE UNIQUE INDEX IF NOT EXISTS uk_report_management_number ON report_management(number) WHERE is_deleted = 0;
CREATE INDEX IF NOT EXISTS idx_report_management_project_id ON report_management(project_id);
CREATE INDEX IF NOT EXISTS idx_report_management_creator_id ON report_management(creator_id);
CREATE INDEX IF NOT EXISTS idx_report_management_report_type ON report_management(report_type);
CREATE INDEX IF NOT EXISTS idx_report_management_status ON report_management(status);
CREATE INDEX IF NOT EXISTS idx_report_management_created_time ON report_management(created_time);
CREATE INDEX IF NOT EXISTS idx_report_management_is_deleted ON report_management(is_deleted);

CREATE TABLE IF NOT EXISTS report_generation_config (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    report_id BIGINT NOT NULL,
    report_style VARCHAR(20) NOT NULL,
    detail_level VARCHAR(20) NOT NULL,
    special_requirements TEXT,
    generate_status VARCHAR(20) DEFAULT 'pending',
    progress INT DEFAULT 0,
    estimated_time INT,
    error_message TEXT,
    dify_task_id VARCHAR(100),
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    updated_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    generate_start_time TIMESTAMP,
    generate_end_time TIMESTAMP
);
COMMENT ON TABLE report_generation_config IS '报告生成配置表';
COMMENT ON COLUMN report_generation_config.id IS '配置ID，主键，自增';
COMMENT ON COLUMN report_generation_config.report_id IS '报告ID';
COMMENT ON COLUMN report_generation_config.report_style IS '报告风格（formal/academic/concise）';
COMMENT ON COLUMN report_generation_config.detail_level IS '详细程度（brief/standard/detailed）';
COMMENT ON COLUMN report_generation_config.special_requirements IS '特殊要求';
COMMENT ON COLUMN report_generation_config.generate_status IS '生成状态（pending/generating/success/failed）';
COMMENT ON COLUMN report_generation_config.progress IS '生成进度（0-100）';
COMMENT ON COLUMN report_generation_config.estimated_time IS '预计剩余时间（秒）';
COMMENT ON COLUMN report_generation_config.error_message IS '错误信息';
COMMENT ON COLUMN report_generation_config.dify_task_id IS 'Dify任务ID';
COMMENT ON COLUMN report_generation_config.is_deleted IS '逻辑删除标识：0=未删除，1=已删除';
COMMENT ON COLUMN report_generation_config.created_by IS '创建人ID';
COMMENT ON COLUMN report_generation_config.updated_by IS '更新人ID';
COMMENT ON COLUMN report_generation_config.created_time IS '创建时间';
COMMENT ON COLUMN report_generation_config.generate_start_time IS '开始生成时间';
COMMENT ON COLUMN report_generation_config.generate_end_time IS '生成完成时间';
CREATE INDEX IF NOT EXISTS idx_report_generation_config_report_id ON report_generation_config(report_id);
CREATE INDEX IF NOT EXISTS idx_report_generation_config_status ON report_generation_config(generate_status);
CREATE INDEX IF NOT EXISTS idx_report_generation_config_task_id ON report_generation_config(dify_task_id);
CREATE INDEX IF NOT EXISTS idx_report_generation_config_is_deleted ON report_generation_config(is_deleted);

CREATE TABLE IF NOT EXISTS report_content (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    report_id BIGINT NOT NULL,
    title VARCHAR(255) NOT NULL,
    content TEXT NOT NULL,
    word_count INT DEFAULT 0,
    ref_docs_count INT DEFAULT 0,
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    updated_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE report_content IS '报告内容表';
COMMENT ON COLUMN report_content.id IS '内容ID，主键，自增';
COMMENT ON COLUMN report_content.report_id IS '报告ID';
COMMENT ON COLUMN report_content.title IS '报告标题';
COMMENT ON COLUMN report_content.content IS '报告HTML内容';
COMMENT ON COLUMN report_content.word_count IS '字数统计';
COMMENT ON COLUMN report_content.ref_docs_count IS '引用文档数量';
COMMENT ON COLUMN report_content.is_deleted IS '逻辑删除标识：0=未删除，1=已删除';
COMMENT ON COLUMN report_content.created_by IS '创建人ID';
COMMENT ON COLUMN report_content.updated_by IS '更新人ID';
COMMENT ON COLUMN report_content.created_time IS '创建时间';
COMMENT ON COLUMN report_content.updated_time IS '更新时间';
CREATE INDEX IF NOT EXISTS idx_report_content_report_id ON report_content(report_id);
CREATE INDEX IF NOT EXISTS idx_report_content_is_deleted ON report_content(is_deleted);

-- ===================== FILE STORAGE DOMAIN (2 tables) =====================

CREATE TABLE IF NOT EXISTS sys_attachment (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    file_name VARCHAR(255) NOT NULL,
    original_name VARCHAR(255) NOT NULL,
    file_type VARCHAR(20) NOT NULL,
    file_extension VARCHAR(10) NOT NULL,
    file_size BIGINT NOT NULL,
    file_url VARCHAR(500) NOT NULL,
    file_path VARCHAR(500) NOT NULL,
    mime_type VARCHAR(100) NOT NULL,
    md5_hash VARCHAR(32) NOT NULL,
    uploader_id BIGINT NOT NULL,
    uploader_name VARCHAR(50) NOT NULL,
    upload_time TIMESTAMP NOT NULL,
    download_count INT DEFAULT 0,
    is_public SMALLINT DEFAULT 0,
    dify_doc_id VARCHAR(100),
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    updated_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE sys_attachment IS '通用附件表';
COMMENT ON COLUMN sys_attachment.id IS '附件ID，主键，自增';
COMMENT ON COLUMN sys_attachment.file_name IS '文件名称';
COMMENT ON COLUMN sys_attachment.original_name IS '原始文件名';
COMMENT ON COLUMN sys_attachment.file_type IS '文件类型';
COMMENT ON COLUMN sys_attachment.file_extension IS '文件扩展名';
COMMENT ON COLUMN sys_attachment.file_size IS '文件大小（字节）';
COMMENT ON COLUMN sys_attachment.file_url IS '文件URL';
COMMENT ON COLUMN sys_attachment.file_path IS '存储路径';
COMMENT ON COLUMN sys_attachment.mime_type IS 'MIME类型';
COMMENT ON COLUMN sys_attachment.md5_hash IS '文件MD5哈希值';
COMMENT ON COLUMN sys_attachment.uploader_id IS '上传人ID';
COMMENT ON COLUMN sys_attachment.uploader_name IS '上传人姓名';
COMMENT ON COLUMN sys_attachment.upload_time IS '上传时间';
COMMENT ON COLUMN sys_attachment.download_count IS '下载次数';
COMMENT ON COLUMN sys_attachment.is_public IS '是否公开（0:私有,1:公开）';
COMMENT ON COLUMN sys_attachment.dify_doc_id IS 'Dify文档ID';
COMMENT ON COLUMN sys_attachment.is_deleted IS '逻辑删除标识：0=未删除，1=已删除';
COMMENT ON COLUMN sys_attachment.created_time IS '创建时间';
CREATE INDEX IF NOT EXISTS idx_sys_attachment_uploader_id ON sys_attachment(uploader_id);
CREATE INDEX IF NOT EXISTS idx_sys_attachment_file_type ON sys_attachment(file_type);
CREATE INDEX IF NOT EXISTS idx_sys_attachment_md5_hash ON sys_attachment(md5_hash);
CREATE INDEX IF NOT EXISTS idx_sys_attachment_is_public ON sys_attachment(is_public);
CREATE INDEX IF NOT EXISTS idx_sys_attachment_is_deleted ON sys_attachment(is_deleted);

CREATE TABLE IF NOT EXISTS sys_attachment_relation (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    attachment_id BIGINT NOT NULL,
    relation_type VARCHAR(20) NOT NULL,
    relation_id BIGINT NOT NULL,
    relation_name VARCHAR(100),
    attachment_type VARCHAR(20) NOT NULL,
    sort_order INT DEFAULT 0,
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    updated_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE sys_attachment_relation IS '附件关联表';
COMMENT ON COLUMN sys_attachment_relation.id IS '关联ID，主键，自增';
COMMENT ON COLUMN sys_attachment_relation.attachment_id IS '附件ID';
COMMENT ON COLUMN sys_attachment_relation.relation_type IS '关联类型（project/declaration/report/user）';
COMMENT ON COLUMN sys_attachment_relation.relation_id IS '关联对象ID';
COMMENT ON COLUMN sys_attachment_relation.relation_name IS '关联对象名称';
COMMENT ON COLUMN sys_attachment_relation.attachment_type IS '附件类型（document/image/export/other）';
COMMENT ON COLUMN sys_attachment_relation.sort_order IS '排序号';
COMMENT ON COLUMN sys_attachment_relation.is_deleted IS '逻辑删除标识：0=未删除，1=已删除';
COMMENT ON COLUMN sys_attachment_relation.created_time IS '创建时间';
CREATE INDEX IF NOT EXISTS idx_sys_attachment_relation_attachment_id ON sys_attachment_relation(attachment_id);
CREATE INDEX IF NOT EXISTS idx_sys_attachment_relation_relation ON sys_attachment_relation(relation_type, relation_id);
CREATE INDEX IF NOT EXISTS idx_sys_attachment_relation_type ON sys_attachment_relation(attachment_type);
CREATE INDEX IF NOT EXISTS idx_sys_attachment_relation_is_deleted ON sys_attachment_relation(is_deleted);

-- ===================== KNOWLEDGE DOMAIN (3 tables) =====================

CREATE TABLE IF NOT EXISTS sys_knowledge_base (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(200) NOT NULL,
    description TEXT,
    owner_id BIGINT NOT NULL,
    owner_name VARCHAR(50) NOT NULL,
    project_id BIGINT,
    project_name VARCHAR(200),
    dify_kb_id VARCHAR(100),
    is_shared SMALLINT DEFAULT 0,
    status VARCHAR(20) DEFAULT 'active',
    file_count INT DEFAULT 0,
    folder_count INT DEFAULT 0,
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    updated_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE sys_knowledge_base IS '知识库表';
COMMENT ON COLUMN sys_knowledge_base.id IS '知识库ID，主键，自增';
COMMENT ON COLUMN sys_knowledge_base.name IS '知识库名称';
COMMENT ON COLUMN sys_knowledge_base.description IS '知识库描述';
COMMENT ON COLUMN sys_knowledge_base.owner_id IS '创建人ID';
COMMENT ON COLUMN sys_knowledge_base.owner_name IS '创建人姓名';
COMMENT ON COLUMN sys_knowledge_base.project_id IS '关联项目ID';
COMMENT ON COLUMN sys_knowledge_base.project_name IS '关联项目名称';
COMMENT ON COLUMN sys_knowledge_base.dify_kb_id IS 'Dify知识库ID';
COMMENT ON COLUMN sys_knowledge_base.is_shared IS '是否共享';
COMMENT ON COLUMN sys_knowledge_base.status IS '状态';
COMMENT ON COLUMN sys_knowledge_base.file_count IS '文件数量';
COMMENT ON COLUMN sys_knowledge_base.folder_count IS '文件夹数量';
COMMENT ON COLUMN sys_knowledge_base.is_deleted IS '逻辑删除标识：0=未删除，1=已删除';
COMMENT ON COLUMN sys_knowledge_base.created_time IS '创建时间';
COMMENT ON COLUMN sys_knowledge_base.updated_time IS '更新时间';
CREATE INDEX IF NOT EXISTS idx_sys_knowledge_base_owner_id ON sys_knowledge_base(owner_id);
CREATE INDEX IF NOT EXISTS idx_sys_knowledge_base_project_id ON sys_knowledge_base(project_id);
CREATE INDEX IF NOT EXISTS idx_sys_knowledge_base_is_shared ON sys_knowledge_base(is_shared);
CREATE INDEX IF NOT EXISTS idx_sys_knowledge_base_is_deleted ON sys_knowledge_base(is_deleted);

CREATE TABLE IF NOT EXISTS sys_knowledge_folder (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    knowledge_id BIGINT NOT NULL,
    parent_id BIGINT DEFAULT 0,
    folder_name VARCHAR(100) NOT NULL,
    folder_path VARCHAR(500) NOT NULL,
    sort_order INT DEFAULT 0,
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    updated_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE sys_knowledge_folder IS '知识库文件夹表';
COMMENT ON COLUMN sys_knowledge_folder.id IS '文件夹ID，主键，自增';
COMMENT ON COLUMN sys_knowledge_folder.knowledge_id IS '知识库ID';
COMMENT ON COLUMN sys_knowledge_folder.parent_id IS '父文件夹ID(0为根目录)';
COMMENT ON COLUMN sys_knowledge_folder.folder_name IS '文件夹名称';
COMMENT ON COLUMN sys_knowledge_folder.folder_path IS '文件夹路径';
COMMENT ON COLUMN sys_knowledge_folder.sort_order IS '排序号';
COMMENT ON COLUMN sys_knowledge_folder.is_deleted IS '逻辑删除标识：0=未删除，1=已删除';
COMMENT ON COLUMN sys_knowledge_folder.created_time IS '创建时间';
CREATE INDEX IF NOT EXISTS idx_sys_knowledge_folder_knowledge_id ON sys_knowledge_folder(knowledge_id);
CREATE INDEX IF NOT EXISTS idx_sys_knowledge_folder_parent_id ON sys_knowledge_folder(parent_id);
CREATE INDEX IF NOT EXISTS idx_sys_knowledge_folder_is_deleted ON sys_knowledge_folder(is_deleted);

CREATE TABLE IF NOT EXISTS sys_knowledge_file_relation (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    knowledge_id BIGINT NOT NULL,
    folder_id BIGINT DEFAULT 0,
    attachment_id BIGINT NOT NULL,
    file_name VARCHAR(255) NOT NULL,
    sort_order INT DEFAULT 0,
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    updated_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE sys_knowledge_file_relation IS '知识库文件关联表';
COMMENT ON COLUMN sys_knowledge_file_relation.id IS '关联ID，主键，自增';
COMMENT ON COLUMN sys_knowledge_file_relation.knowledge_id IS '知识库ID';
COMMENT ON COLUMN sys_knowledge_file_relation.folder_id IS '文件夹ID（0为根目录）';
COMMENT ON COLUMN sys_knowledge_file_relation.attachment_id IS '附件ID';
COMMENT ON COLUMN sys_knowledge_file_relation.file_name IS '文件显示名称';
COMMENT ON COLUMN sys_knowledge_file_relation.sort_order IS '排序号';
COMMENT ON COLUMN sys_knowledge_file_relation.is_deleted IS '逻辑删除标识：0=未删除，1=已删除';
COMMENT ON COLUMN sys_knowledge_file_relation.created_time IS '创建时间';
CREATE INDEX IF NOT EXISTS idx_sys_knowledge_file_relation_knowledge_id ON sys_knowledge_file_relation(knowledge_id);
CREATE INDEX IF NOT EXISTS idx_sys_knowledge_file_relation_folder_id ON sys_knowledge_file_relation(folder_id);
CREATE INDEX IF NOT EXISTS idx_sys_knowledge_file_relation_attachment_id ON sys_knowledge_file_relation(attachment_id);
CREATE INDEX IF NOT EXISTS idx_sys_knowledge_file_relation_is_deleted ON sys_knowledge_file_relation(is_deleted);

-- ===================== AI ASSISTANT DOMAIN (2 tables) =====================

CREATE TABLE IF NOT EXISTS ai_conversation (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT NOT NULL,
    title VARCHAR(255) NOT NULL,
    dify_conversation_id VARCHAR(100),
    is_pinned SMALLINT DEFAULT 0,
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    updated_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE ai_conversation IS 'AI对话表';
COMMENT ON COLUMN ai_conversation.id IS '对话ID，主键，自增';
COMMENT ON COLUMN ai_conversation.user_id IS '用户ID';
COMMENT ON COLUMN ai_conversation.title IS '会话标题';
COMMENT ON COLUMN ai_conversation.dify_conversation_id IS 'Dify会话ID';
COMMENT ON COLUMN ai_conversation.is_pinned IS '是否置顶(0:否,1:是)';
COMMENT ON COLUMN ai_conversation.is_deleted IS '逻辑删除标识：0=未删除，1=已删除';
COMMENT ON COLUMN ai_conversation.created_time IS '创建时间';
COMMENT ON COLUMN ai_conversation.updated_time IS '更新时间';
CREATE INDEX IF NOT EXISTS idx_ai_conversation_user_id ON ai_conversation(user_id);
CREATE INDEX IF NOT EXISTS idx_ai_conversation_is_pinned ON ai_conversation(is_pinned);
CREATE INDEX IF NOT EXISTS idx_ai_conversation_is_deleted ON ai_conversation(is_deleted);

CREATE TABLE IF NOT EXISTS ai_message (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    conversation_id BIGINT NOT NULL,
    role VARCHAR(10) NOT NULL,
    content TEXT NOT NULL,
    dify_message_id VARCHAR(100),
    sources JSON,
    confidence DECIMAL(5,2),
    send_time TIMESTAMP NOT NULL,
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    updated_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE ai_message IS 'AI消息表';
COMMENT ON COLUMN ai_message.id IS '消息ID，主键，自增';
COMMENT ON COLUMN ai_message.conversation_id IS '会话ID';
COMMENT ON COLUMN ai_message.role IS '角色(user/assistant)';
COMMENT ON COLUMN ai_message.content IS '消息内容';
COMMENT ON COLUMN ai_message.dify_message_id IS 'Dify消息ID';
COMMENT ON COLUMN ai_message.sources IS '知识来源(JSON数组)';
COMMENT ON COLUMN ai_message.confidence IS '置信度(0-100)';
COMMENT ON COLUMN ai_message.send_time IS '发送时间';
COMMENT ON COLUMN ai_message.is_deleted IS '逻辑删除标识：0=未删除，1=已删除';
COMMENT ON COLUMN ai_message.created_time IS '创建时间';
CREATE INDEX IF NOT EXISTS idx_ai_message_conversation_id ON ai_message(conversation_id);
CREATE INDEX IF NOT EXISTS idx_ai_message_role ON ai_message(role);
CREATE INDEX IF NOT EXISTS idx_ai_message_send_time ON ai_message(send_time);
CREATE INDEX IF NOT EXISTS idx_ai_message_is_deleted ON ai_message(is_deleted);

-- ===================== SYSTEM CONFIG DOMAIN (1 table) =====================

CREATE TABLE IF NOT EXISTS sys_config (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    config_key VARCHAR(100) NOT NULL,
    config_value TEXT,
    config_type VARCHAR(50),
    description VARCHAR(255),
    is_encrypted SMALLINT DEFAULT 0,
    is_deleted SMALLINT DEFAULT 0,
    created_by BIGINT,
    updated_by BIGINT,
    created_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
COMMENT ON TABLE sys_config IS '系统配置表';
COMMENT ON COLUMN sys_config.id IS '配置ID，主键，自增';
COMMENT ON COLUMN sys_config.config_key IS '配置键，唯一标识';
COMMENT ON COLUMN sys_config.config_value IS '配置值';
COMMENT ON COLUMN sys_config.config_type IS '配置类型：string/number/json/boolean';
COMMENT ON COLUMN sys_config.description IS '配置描述';
COMMENT ON COLUMN sys_config.is_encrypted IS '是否加密：0=否，1=是';
COMMENT ON COLUMN sys_config.is_deleted IS '逻辑删除标识：0=未删除，1=已删除';
COMMENT ON COLUMN sys_config.created_time IS '创建时间';
COMMENT ON COLUMN sys_config.updated_time IS '更新时间';
CREATE UNIQUE INDEX IF NOT EXISTS uk_sys_config_key ON sys_config(config_key) WHERE is_deleted = 0;
CREATE INDEX IF NOT EXISTS idx_sys_config_type ON sys_config(config_type);
CREATE INDEX IF NOT EXISTS idx_sys_config_is_deleted ON sys_config(is_deleted);

COMMIT;

-- End of schema

