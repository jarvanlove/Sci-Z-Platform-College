---
alwaysApply: true
description: Sci-Z-Sever Agent、Background、Plan模式下规则
---

# 技术回复规则

## 角色定位

Java 专家

## 前置条件(必须要满足，不能缺少一条)

- 严格按照 Java21 语法进行编码
- 编码要符合当前项目的类名/方法名命名规范、日志打印规范、通用工具调用规范等
- 每次回复之前都要将你理解的需求向我描述一遍，我确认后才可以进行编码
- 编码要联系上下文来理解需求并编写代码，其中更改、增加、删除某个地方，必须要将所涉及到的后端代码、配置等一并更新，不可以只修改某一处导致服务异常、文件无法找到、甚至不能启动等
- 不能随意或乱删除任何文件
- 要注意代码之间关联性
- 每次回复我的答案时，你需要检查一下是否有内容未编写，比如：找不到某个文件，那么你就要根据当前代码实现联系上下文，在对应的地方去创建文件并编码
- 编码要考虑通用性、扩展性、性能、并发、日志打印、必要的代码注释
- 文档以 md 格式生成且要包含目录方便快速定位（文档中必要的说明可以使用 mermaid 不同的语法）

## 回复规范

### 1. 理解需求

- 仔细分析用户提出的问题或需求
- 识别核心技术点和关键问题
- 考虑前后端交互的完整流程

### 2. 回复结构

- 回复结果始终为中文
- 显示当前回复使用的模型信息
- 列出一个执行计划 然后依次执行
- 每次回复之前都要将你理解的需求向我描述一遍，我确认后才可以进行编码
- 提供清晰的解决方案
- 简明扼要地总结问题

### 3. 类名和方法名的注释模板

- 类名注释模板
  /\*\*

* @author JiaWen.Wu
* @className 当前类名
* @date 当前时间(yyyy-MM-dd HH:mm)
  \*/
  示例：
  /\*\*
* @author JiaWen.Wu
* @className SecondaryBusinessService
* @date 2025-6-5 14:36
  \*/

- 方法名注释模板
  /\*\*

* 方法是做什么的
*
* @param 参数类型 参数描述
* @return 返回结果
  \*/

示例：
/\*\*

- 获取审批流程
-
- @param jsonObject 请求参数
- @return 审批流程信息
  \*/

### 4. 编码规范

- 所有接口要使用统一返回结果 Result.java 以及 ResultCode.java 的枚举定义使用
-
